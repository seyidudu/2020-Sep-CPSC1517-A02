@{

    Layout = "~/_Layout.cshtml";
    Page.Title = "TextBox Sample";

    //retrieve the lidty of category form the database and the data is needed in the form
    var db = Database.Open("NWDB");
    var querycommand = @"SELECT CategoryID, CategoryName
FROM Categories
ORDER BY CategoryName";
    // if you have possible multiple records being returned by your quet, then, use the .Query() execution
    var ddlResults = db.Query(querycommand);
    var categoryselection = "0";
}
@section banner {<div><h3>Multi-Record query</h3></div>}
@if (IsPost)
{
    //
    categoryselection = Request.Form["CategoryList"];
    if (categoryselection.Equals("0"))
    {
        <p> <span style="color:firebrick">MAke a Selection from the List</span></p>
    }
    else
    {
        //determine if there is anything to display
        // for the selected category
        //execute a query against the product table to see
        //  if the selected category has any products

        var querysearch = @"SELECT ProductID
                        FROM Products
                        WHERE CategoryID = @0";
        var results = db.Query(querysearch, categoryselection);

        // to test if any records were returned from the sql query
        //  check the results for a record .Count() == 0
        // if nop records were returned the count is o
        // if 1,2 or more records were returned the count is > 0
        if (results.Count() == 0)
        {
            <p> <span style="color:firebrick">there are no products for the selection list</span></p>
        }
        else
        {
            //<p> <span style="color:green">there are @results.Count() from the selection in the category List</span></p>
            // passing data to another page
            // data passed this way is sdone via the html GETHTML
            Response.Redirect("WebGridDemo.cshtml?cid=" + categoryselection);
        }
    }
}
else
{
    categoryselection = "0";
}

<form id="theForm" method="post">
    <div class="row">
        <div class="offset-1">
            <label for="CategoryList">Select a category</label>
            <select name="CategoryList" id="CategoryList">
                <option value="0">Select ---</option>
                @*loopthrough the collection of records in your ddl Results
                    Create a line in the ddl for each item ub the collction
                    referencing an item column of the collcetions can be
                    done either with an index or propertname technique*@
                @foreach (var item in ddlResults)
                {// how to retain the current selection inside a ddl
                    if (item.CategoryID.ToString() == categoryselection)
                    {
                        <option value="@item.CategoryID" selected>@item.CategoryName</option>
                    }
                    else
                    {
                        <option value="@item.CategoryID">@item.CategoryName</option>
                    }

                }
            </select>&nbsp;&nbsp;
            <button type="submit" name="myButton" id="myButton" value="submit" class="btn btn-danger">Submit</button>
        </div>
    </div>
</form>